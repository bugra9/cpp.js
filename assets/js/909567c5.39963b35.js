"use strict";(self.webpackChunk_cpp_js_website=self.webpackChunk_cpp_js_website||[]).push([[6196],{5004:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var t=i(7512),s=i(2436);const a={},o="Calling C++ from JavaScript",r={id:"guide/features/calling-cpp-from-javascript",title:"Calling C++ from JavaScript",description:"Cpp.js enables you to call C++ functions directly from JavaScript with ease. By compiling C++ into WebAssembly for web applications or native code for mobile, it allows seamless integration between the two languages, combining the power and performance of C++ with the flexibility of JavaScript.",source:"@site/docs/guide/features/calling-cpp-from-javascript.md",sourceDirName:"guide/features",slug:"/guide/features/calling-cpp-from-javascript",permalink:"/docs/guide/features/calling-cpp-from-javascript",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"guide",previous:{title:"Expo",permalink:"/docs/guide/integrate-into-existing-project/expo"},next:{title:"Assets",permalink:"/docs/guide/features/assets"}},c={},l=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.M)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"calling-c-from-javascript",children:"Calling C++ from JavaScript"})}),"\n",(0,t.jsx)(n.p,{children:"Cpp.js enables you to call C++ functions directly from JavaScript with ease. By compiling C++ into WebAssembly for web applications or native code for mobile, it allows seamless integration between the two languages, combining the power and performance of C++ with the flexibility of JavaScript."}),"\n",(0,t.jsx)(n.p,{children:"The key advantage of Cpp.js is that it automatically handles the binding process, so you can focus on writing your application logic. C++ classes and functions can be used in JavaScript as if they were native objects, with no manual bindings required."}),"\n",(0,t.jsxs)(n.p,{children:["For more detailed information on how to use C++ with JavaScript, refer to the ",(0,t.jsx)(n.a,{href:"/docs/api/cpp-bindings/overview",children:"API/C++ Bindings"})," section."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/api/cpp-bindings/data-types",children:"Data Types"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/api/cpp-bindings/functions",children:"Functions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/api/cpp-bindings/classes",children:"Classes and Objects"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Here is a minimal example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="/src/main.js"',children:"import { initCppJs } './native/helloWorld.h';\n\nconst { getHelloWorldMessage } = await initCppJs();\nconsole.log(getHelloWorldMessage());\n\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:'title="/src/native/helloWorld.h"',children:"std::string getHelloWorldMessage() {\n  return 'Hello World!';\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},2436:(e,n,i)=>{i.d(n,{I:()=>r,M:()=>o});var t=i(5496);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);